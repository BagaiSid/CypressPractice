{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-02T08:59:22.114Z",
    "end": "2024-10-02T08:59:25.120Z",
    "duration": 3006,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "af927fe2-e598-454a-acc1-26f3d8d3102a",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\Test01.js",
      "file": "cypress\\integration\\examples\\Test01.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6c93420b-2334-400b-a974-9913f104b185",
          "title": "My First Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My First Test Case",
              "fullTitle": "My First Test Suite My First Test Case",
              "timedOut": null,
              "duration": 1880,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://rahulshettyacademy.com/seleniumPractise/#/');\ncy.get('.search-keyword').type('be');\n// cy.wait(2000);\n// In Selenium 'get' is used to hit url in browser. However, in cypress 'get' acts like finding the elements like 'findElements' of selenium\n// 'visible' is used if there is any element which is hidden in the webpage, it eleminates those are hidden.\ncy.get('.products').as('productLocator');\ncy.get('.product:visible').should('have.length', 5);\n// Parent child chaining\ncy.get('@productLocator').find('.product').should('have.length', 5);\nconsole.log('Printing the example of console logging');\n// cy.get('.products').find('.product').eq(4).contains('ADD TO CART').click();\ncy.get('@productLocator').find('.product').each(($el, index, $list) => {\n  const textItem = $el.find('h4.product-name').text();\n  if (textItem.includes('Stra')) {\n    cy.wrap($el).find('button').click();\n  }\n});\n// assert if log is correctly displayed\ncy.get('.brand').should('have.text', 'GREENKART');\n// This is to print in logs\ncy.get('.brand').then(function (logoElement) {\n  cy.log(logoElement.text());\n});",
              "err": {},
              "uuid": "1e0c91b1-efaf-4ef7-85f8-5cae6f36fbd2",
              "parentUUID": "6c93420b-2334-400b-a974-9913f104b185",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e0c91b1-efaf-4ef7-85f8-5cae6f36fbd2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1880,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}